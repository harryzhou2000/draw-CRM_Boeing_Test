import numpy as np


def getData_fig14_c():
    """
    data from fig14 - c: Custom Unstructured Grids
    """
    data = {}

    x = [0.00000643356750061462, 0.000014685314685314684]
    y = [0.02584417551116656, 0.026239031798647693]
    data["d"] = (np.array(x), np.array(y))

    x = [
        0.000010699300699300699,
        0.000012482517482517483,
        0.00001503496610201322,
        0.000017867133934181054,
        0.000021223780491968967,
        0.00002506993006993007,
    ]
    y = [
        0.026257186041462585,
        0.02607564299003481,
        0.026180030145919967,
        0.026338880445769028,
        0.026475037786279763,
        0.02653857794777131,
    ]
    data["\\Pi"] = (np.array(x), np.array(y))

    x = [0.000008566435700529938, 0.00002688811615630463]
    y = [0.025649016517928096, 0.025998486886732577]
    data["\\lambda"] = (np.array(x), np.array(y))

    x = [
        0.000010664337798432037,
        0.000012552449686543925,
        0.000015069932204026443,
        0.000017832167832167832,
        0.000021153848287942527,
    ]
    y = [
        0.025871406979268707,
        0.025698940737608957,
        0.025767019407864324,
        0.025885022713319782,
        0.025957639684579356,
    ]
    data["\\pi"] = (np.array(x), np.array(y))

    return data


def getData_fig14_b():
    """
    data from fig14 - b: Boeing Unstructured Grids
    """
    data = {}
    x = [
        0.000004798656694041003,
        0.000005838926174496645,
        0.00000674496644295302,
        0.00000795302013422819,
        0.000009563758389261746,
        0.000011241609714175232,
        0.000013288590604026846,
    ]
    y = [
        0.025534782608695652,
        0.0256,
        0.025582608562967055,
        0.025591304082455843,
        0.02563913043478261,
        0.025656521473760192,
        0.02572608682383662,
    ]
    data["P"] = (np.array(x), np.array(y))

    x = [
        0.000005906039244376573,
        0.000006812079512832949,
        0.000008087246273988045,
        0.000009563758389261746,
        0.00001134228085511483,
        0.000013288590604026846,
    ]
    y = [
        0.025978260869565218,
        0.025913043478260872,
        0.02594347799549932,
        0.026082608695652175,
        0.026082608695652175,
        0.026243478194527006,
    ]
    data["J"] = (np.array(x), np.array(y))

    x = [
        0.000005838926174496645,
        0.000006778521441773281,
        0.000008087246273988045,
        0.000009597313388082007,
        0.00001130872278405516,
        0.000013255032532967178,
    ]
    y = [
        0.026295652107570483,
        0.026217391238005268,
        0.0262478259542714,
        0.026504347759744397,
        0.026365217258619227,
        0.02661739130434783,
    ]
    data["K"] = (np.array(x), np.array(y))

    return data


def getData_fig14_test():
    ys = [
        0.024069565084706184,
        0.02418695638905401,
        0.024273912778108017,
        0.0248304347826087,
        0.024886956256368886,
        0.024930434649923575,
    ]
    return {"NTF Test": ys[3:6], "Ames Test": ys[0:3]}


if __name__ == "__main__":
    data14_b = getData_fig14_b()
    data14_c = getData_fig14_c()
    data14_test = getData_fig14_test()
    import matplotlib.pyplot as plt
    import itertools

    for name, data in itertools.chain(data14_b.items(), data14_c.items()):
        plt.plot(data[0], data[1], label=name)
    for name, data in data14_test.items():
        c = "k" if name == "NTF Test" else "b"
        for i, y in enumerate(data):
            plt.plot([0, 3e-5], [y, y], label=name if i == 0 else None, ls = "--", c = c)

    plt.xlim((0, 3e-5))
    plt.ylim((0.024, 0.028))
    plt.grid(True, which="both")
    plt.legend()
    plt.xlabel("GRIDFAC = N^(-2/3)")
    plt.ylabel("CD Tot")
    plt.show()
